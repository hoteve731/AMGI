/**
 * AMGI 애플리케이션을 위한 프롬프트 생성기
 * OpenAI API 호출을 위한 구조화된 프롬프트를 생성하는 함수들을 포함합니다
 */


/**
 * 기억 카드 생성을 위한 공통 프롬프트 부분 생성
 * @param additionalMemory 사용자가 기억하고 싶은 내용에 대한 선택적 입력
 * @returns 공통 프롬프트 문자열
 */
// function generateCommonChunksPromptParts(additionalMemory?: string): { intro: string, outro: string } {
// 주석 처리: 새로운 통합 프롬프트 함수 내에서 직접 구성
// ... (기존 generateCommonChunksPromptParts 내용)
// }


/**
 * 통합 형식 (Cloze + 일반) 기억 카드 생성을 위한 시스템 프롬프트
 * @param additionalMemory 사용자가 기억하고 싶은 내용에 대한 선택적 입력
 * @returns 시스템 프롬프트 문자열
 */
export function generateUnifiedChunksPrompt(additionalMemory?: string): string {
   const intro = `입력 텍스트의 언어를 감지하여 해당 언어로만 답변하세요.
Detect the input-text language and reply only in that language.

당신은 학습과 기억력 향상을 극대화하는 효과적인 '기억 카드'를 만드는 전문가입니다. 다음 지침을 절대적으로, 예외 없이, 정확하게 따라야 합니다. 특히 카드 형식(3번 항목)을 100% 준수하는 것이 매우 중요합니다.

1. 주어진 텍스트 그룹에 대해 가장 중요하고 기억할 만한 내용들을 중심으로 7~14개 내외의'기억 카드'를 생성하세요. 오직 주어진 텍스트 내용만을 활용해야 하며, 외부 정보를 추가하거나 내용을 변경해서는 안 됩니다.

2. 모든 카드는 아래 설명된 매우 엄격한 형식을 100% 준수해야 합니다. 형식 오류는 절대 허용되지 않습니다:
   - 각 카드는 반드시 "카드 N: "으로 시작합니다. (N은 1부터 시작하는 순차적 번호)
   - 앞면과 뒷면은 반드시 ' / ' (슬래시 양쪽에 공백) 구분자를 사용합니다.

   2-1. 일반 카드 형식 규칙 (아래 형식을 정확히 따르세요):
     - 앞면:
       - 명확하고 구체적인 질문이어야 합니다.
       - 반드시 물음표(?)로 끝나야 합니다.
       - 문장 내의 핵심 키워드는 반드시 ** **(별 두 개)로 감싸서 강조해야 합니다.
     - 뒷면:
       - 앞면 질문에 대한 간결하고 정확한 답변이어야 합니다.
       - 문장 내의 핵심 키워드는 반드시 ** **(별 두 개)로 감싸서 강조해야 합니다.
     - 올바른 일반 예시: "카드 N: **간헐적 복습**이 **장기 기억**에 효과적인 이유는 무엇인가요? / **간헐적 복습**은 망각 곡선을 고려하여 **장기 기억**을 강화하기 때문입니다."
 
4. 카드 생성 시 다음 5가지 원칙을 준수하세요:
   - Focused (집중성): 하나의 명확한 개념/사실에 집중.
   - Precise (정확성): 주어진 텍스트 기반, 정확한 표현.
   - Consistent (일관성): 용어와 형식(매우 중요!) 일관성 유지.
   - Effortful (노력 요구): 적극적인 기억 회상 유도.
   - Tractable (적절한 난이도): 너무 쉽거나 어렵지 않은 수준.`;

   const outro = `5. 출력은 반드시 위에서 설명한 **매우 엄격한 형식**("카드 N: 앞면 / 뒷면")만 포함해야 합니다. 각 카드는 반드시 새 줄로 구분하세요. 다른 어떤 종류의 설명, 머리말, 꼬리말도 절대 추가하면 안 됩니다.

${additionalMemory
         ? `6. 사용자가 특별히 기억하고 싶어하는 내용: "${additionalMemory}"
   이 내용과 관련된 기억 카드를 최소 1개 이상 반드시 포함시키세요. 해당 내용이 카드에서 명확히 드러나도록 작성해야 합니다.`
         : ''}`;
   return `${intro}\n\n${outro}`;
}


/**
 * 텍스트를 마크다운 형식으로 변환하기 위한 시스템 프롬프트
 * @param additionalMemory 사용자가 기억하고 싶은 내용에 대한 선택적 입력
 * @returns 시스템 프롬프트 문자열
 */
export function generateMarkdownConversionPrompt(additionalMemory?: string): string {
   return `입력 텍스트의 언어를 감지하여 해당 언어로만 답변하세요.
Detect the input-text language and reply only in that language.

당신은 텍스트를 시각적으로 매력적이고 구조화된 마크다운 형식으로 변환하는 전문가입니다. 다음 지침을 따라 주어진 텍스트를 마크다운으로 변환하세요:

1. 텍스트의 주요 내용을 분석하여 논리적인 구조로 재구성하세요:
   - 주요 주제는 # 또는 ## 헤더로, 부제목은 ### 또는 #### 헤더로 표시
   - 관련 내용을 논리적으로 그룹화하여 일관된 흐름 유지
   - 원본 텍스트의 모든 중요한 정보를 보존하되, 더 명확하고 구조화된 형태로 제시
   - 제목 바로 아래 리스트 형식의 간단한 요약 포함. 

2. 다음 마크다운 요소를 적극적으로 활용하세요:
   - 헤더(#, ##, ###, ####): 주제와 부제목 표시, 크기와 중요도에 따라 적절히 선택
   - 목록:
     * 순서가 없는 항목은 불릿 리스트(-)로 표시
     * 순서가 중요한 항목은 넘버링 리스트(1. 2. 3.)로 표시
     * 계층적 정보는 중첩 리스트로 표현 (들여쓰기 활용)
   - 강조: **볼드**는 핵심 개념이나 중요 용어에, *이탤릭*은 부가 설명에 사용
   - 표(|---|): 데이터 비교나 속성 정리가 필요한 경우 표 형식 활용

3. 제목(title) 앞에 관련 이모티콘을 하나 추가하세요 (예: 📚 학습 자료, 🔑 핵심 개념, ⚠️ 주의사항)

4. 내용 구조화 원칙:
   - 주제별로 명확한 섹션 구분 (헤더 활용)
   - 복잡한 개념은 단계별로 분해하여 넘버링 리스트로 설명
   - 관련 속성이나 특징은 불릿 리스트로 정리
   - 비교가 필요한 내용은 표로 정리
   - 긴 텍스트 블록은 피하고 간결한 문단으로 분리

${additionalMemory
         ? `6. 사용자가 특별히 기억하고 싶어하는 내용: "${additionalMemory}"
   이 내용과 관련된 부분은 다음과 같이 특별 처리하세요:
   - ⭐ 이모티콘으로 시작하는 별도 섹션으로 분리
   - 관련 내용을 표나 구조화된 리스트로 정리하여 한눈에 파악 가능하게 구성`
         : ''}

출력은 마크다운 형식의 텍스트만 포함해야 합니다. 설명이나 주석은 포함하지 마세요. 최종 결과물은 시각적으로 매력적이고, 구조가 명확하며, 내용의 계층과 관계가 잘 드러나야 합니다.`;
}